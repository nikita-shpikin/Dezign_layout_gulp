:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)){all:unset;display:revert}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}a,button{cursor:revert}menu,ol,ul{list-style:none}img{max-inline-size:100%;max-block-size:100%}table{border-collapse:collapse}input,textarea{-webkit-user-select:auto}textarea{white-space:revert}meter{-webkit-appearance:revert;-moz-appearance:revert;appearance:revert}:where(pre){all:revert}::-webkit-input-placeholder{color:unset}::-moz-placeholder{color:unset}:-ms-input-placeholder{color:unset}::-ms-input-placeholder{color:unset}::placeholder{color:unset}::marker{content:initial}:where([hidden]){display:none}:where([contenteditable]:not([contenteditable=false])){-moz-user-modify:read-write;-webkit-user-modify:read-write;overflow-wrap:break-word;-webkit-line-break:after-white-space;-webkit-user-select:auto}:where([draggable=true]){-webkit-user-drag:element}:where(dialog:modal){all:revert}.about__title,.clients__title,.header__link{font-family:"Work Sans";font-style:normal;line-height:150%}body{background:linear-gradient(180deg,#010208 16.39%,#010206 20.51%,#040008 24.79%,#010101 30.46%,#010101 34.11%,#010101 36.21%,#010101 100%)}.container{max-width:1440px;margin:0 auto}.header-container{height:20vh;padding:0 6%;display:grid;grid-template-columns:1fr 1fr;place-items:center}.header__logo{height:10vw;justify-self:self-start}.header-list{justify-self:self-end;display:-webkit-box;display:-ms-flexbox;display:flex;gap:2vw}.header__link{text-transform:uppercase;-webkit-transition:.3s ease-in;-o-transition:.3s ease-in;transition:.3s ease-in;position:relative;font-weight:600;font-size:14px;letter-spacing:0;color:rgba(227,228,230,.55)}.header__link_active::after{background:#e3e4e6;content:"";height:1px;width:9px;position:absolute;bottom:-10px;left:40%}.header__link_active{background:-o-linear-gradient(350.95deg,#bc3cd8 .07%,#c54b8c 106.32%);background:linear-gradient(99.05deg,#bc3cd8 .07%,#c54b8c 106.32%);-webkit-background-clip:text;color:transparent}.about-container{height:80vh;padding:1vw;padding-bottom:10vh;display:grid;place-items:end center}.about__title{text-align:center;font-weight:300;font-size:33px;letter-spacing:-.02em;color:rgba(227,228,230,.55)}.about__title_highlight{color:#e3e4e6}.about__btn{cursor:pointer;-ms-flex-item-align:self-end;align-self:self-end}.clients-container{padding:2%;display:grid;place-items:center center}.clients__title{text-align:center;max-width:60%;font-weight:300;font-size:20px;letter-spacing:0;color:rgba(227,228,230,.55)}.clients__title_highlight{color:#e3e4e6}.clients-list{width:100%;margin-top:5vh;display:grid;grid-template-columns:35vw;place-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:5vh}@media screen and (min-width:576px){.header__logo{height:4vh}.about__title{font-size:44px}.clients__title{font-size:30px}.clients-list{grid-template-columns:repeat(2,30vw)}}@media screen and (min-width:768px){.header-container{height:10vh}.about-container{height:calc(700px - 10vh)}.about__title{max-width:980px;font-size:56px}.clients__title{max-width:660px}}@media screen and (min-width:992px){.clients-container{padding:5vw;place-items:baseline}.clients__title{text-align:left;font-size:40px}.clients-list{grid-template-columns:repeat(4,20%);-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.clients__item{justify-self:baseline}}@media screen and (min-width:1200px){.header-container{height:6vh}.header__logo{height:48px}.about-container{height:calc(700px - 6vh)}}@media (hover:hover){.header__link:hover{background:-o-linear-gradient(350.95deg,#bc3cd8 .07%,#c54b8c 106.32%);background:linear-gradient(99.05deg,#bc3cd8 .07%,#c54b8c 106.32%);-webkit-background-clip:text;color:transparent}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi9yZXNldC5zY3NzIiwibWFpbi5taW4uY3NzIiwiY29tbW9uL2V4dGVuZC5zY3NzIiwibWFpbi5jc3MiLCJoZWFkZXIvaGVhZGVyLnNjc3MiLCJjb21tb24vbWl4aW4uc2NzcyIsImhlYWRlci9oZWFkZXItbWVkaWEuc2NzcyIsImFib3V0L2Fib3V0LnNjc3MiLCJhYm91dC9hYm91dC1tZWRpYS5zY3NzIiwiY2xpZW50cy9jbGllbnRzLnNjc3MiLCJjbGllbnRzL2NsaWVudHMtbWVkaWEuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrRSxDQUdDLFMsQ0FDQSxjLENBR0QsQyxDQ0FBLE8sQ0FEQSxRLENESUMsNkIsQ0NEQyxxQixDRElGLEMsQ0NBQSxNLENERUMsYSxDQ0lELEksQ0REQSxFLENDQUEsRSxDREdDLGUsQ0FHRCxHLENBQ0Msb0IsQ0FDQSxtQixDQUdELEssQ0FDQyx3QixDQUdELEssQ0NBQSxRLENERUMsd0IsQ0FHRCxRLENBQ0Msa0IsQ0FHRCxLLENBQ0MseUIsQ0FDQSxzQixDQ0FDLGlCLENER0YsVyxDQUNDLFUsQ0FHRCwyQixDQUNDLFcsQ0FERCxrQixDQUNDLFcsQ0FERCxzQixDQUNDLFcsQ0FERCx1QixDQUNDLFcsQ0FERCxhLENBQ0MsVyxDQUdELFEsQ0FDQyxlLENBR0QsZ0IsQ0FDQyxZLENBR0Qsc0QsQ0FDQywyQixDQUNBLDhCLENBQ0Esd0IsQ0FDQSxvQyxDQUNBLHdCLENBR0Qsd0IsQ0FDQyx5QixDQUdELG9CLENBQ0MsVSxDQ29CRCxhLENDaEdBLGUsQ0RpR0EsYSxDQzlGQyx1QixDQzhFRCxpQixDRm1CRSxnQixDRWZGLEksQ0ZtQkUseUksQ0FHRixVLENFakJBLGdCLENGbUJFLGEsQ0FHRixpQixDRzNHRSxXLENBQ0EsWSxDQUNBLFksQ0QyRkYsNkIsQ0N4RkMsa0IsQ0Q0RkQsYSxDQ3RGQyxXLENBQ0MsdUIsQ0g0R0YsWSxDR3pHRSxxQixDRHVGRixtQixDQ3BGQyxtQixDQUNDLFksQ0FDQSxPLENINEdGLGEsQ0lwSUMsd0IsQ0FDQSw4QixDQUNBLHlCLENBQ0Esc0IsQ0ZnSEQsaUIsQ0N0RkUsZSxDQUNDLGMsQ0FDQSxnQixDQUNBLDJCLENIZ0hILDJCLENHNUdHLGtCLENEd0ZILFUsQ0N0RkUsVSxDQUNDLFMsQ0FBQSxpQixDQUNBLFksQ0FDQSxRLENFMUNILG9CLENBRUUscUUsQ0wySkEsaUUsQ0V0QkEsNEIsQ0FDRixpQixDRjBCQSxnQixDRXRCRSxXLENBQ0YsVyxDRzdIQSxtQixDQUVFLFksQ0xxSkEsc0IsQ0FHRixhLENFdEJFLGlCLENBQ0YsZSxDR3pIQSxjLENBRUUscUIsQ0xpSkEsMkIsQ0FHRix1QixDRXZCRSxhLENGMkJGLFcsQ01uTEUsYyxDQUNBLDRCLENBRUEsbUIsQ0FJRCxrQixDQUNDLFUsQ0ZWRCxZLENBQ0EseUIsQ0Z3S0QsZSxDSTVKRSxpQixDQUNDLGEsQ0o4SkgsZSxDSTFKQyxjLENBQ0MsZ0IsQ0FDQSwyQixDTnNMRix5QixDTzNNQSxhLENQK01BLGEsQ0V4QkEsVSxDSy9LQSxjLENBRUUsWSxDUHlNQSwwQixDRXhCQSxrQixDSzlLQSx1QixDUHlNQSxvQixDQUNBLHNCLENFeEJBLE8sQ005TEQsb0NBQ0MsYSxDQUVBLFUsQ0FJRCxhLENBQ0MsYyxDSlBELGUsQ0FDQSxjLENJV0MsYSxDQUNDLHNDLEFSc09ILG9DQUNFLGlCLENBQ0UsVyxDQUdGLGdCLENTMVBGLHlCLENQbU9FLGEsQ083TkEsZSxDQUNDLGMsQ0FLSCxlLENBRUUsaUIsQVQ4UEYsb0NTalBFLGtCLENBQ0MsVyxDQUNBLG9CLENUcVBELGUsQ1NoUEMsZSxDVGtQQyxjLENTL09GLGEsQ0FDQyxtQyxDUHNORCx3QixDQUNGLHFCLENBQ0EsNkIsQ0ZnQ0UsYyxDRTVCRCx1QixBRnFDRCxxQ0FDRSxpQixDRTVCRixVLENGZ0NFLGEsQ0U1QkYsVyxDRmdDRSxnQixDRTVCRiwwQixBQVFBLHFCRjhCRSxtQixDRTVCRixxRSxDRjhCSSxpRSxDRTVCSiw0QixDRjhCSSxtQiIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqOndoZXJlKFxyXG5cdFx0Om5vdChodG1sLCBpZnJhbWUsIGNhbnZhcywgaW1nLCBzdmcsIHZpZGVvLCBhdWRpbyk6bm90KHN2ZyAqLCBzeW1ib2wgKilcclxuXHQpIHtcclxuXHRhbGw6IHVuc2V0O1xyXG5cdGRpc3BsYXk6IHJldmVydDtcclxufVxyXG5cclxuKixcclxuKjo6YmVmb3JlLFxyXG4qOjphZnRlciB7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuYSxcclxuYnV0dG9uIHtcclxuXHRjdXJzb3I6IHJldmVydDtcclxufVxyXG5cclxub2wsXHJcbnVsLFxyXG5tZW51IHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5pbWcge1xyXG5cdG1heC1pbmxpbmUtc2l6ZTogMTAwJTtcclxuXHRtYXgtYmxvY2stc2l6ZTogMTAwJTtcclxufVxyXG5cclxudGFibGUge1xyXG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbn1cclxuXHJcbmlucHV0LFxyXG50ZXh0YXJlYSB7XHJcblx0LXdlYmtpdC11c2VyLXNlbGVjdDogYXV0bztcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG5cdHdoaXRlLXNwYWNlOiByZXZlcnQ7XHJcbn1cclxuXHJcbm1ldGVyIHtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IHJldmVydDtcclxuXHRhcHBlYXJhbmNlOiByZXZlcnQ7XHJcbn1cclxuXHJcbjp3aGVyZShwcmUpIHtcclxuXHRhbGw6IHJldmVydDtcclxufVxyXG5cclxuOjpwbGFjZWhvbGRlciB7XHJcblx0Y29sb3I6IHVuc2V0O1xyXG59XHJcblxyXG46Om1hcmtlciB7XHJcblx0Y29udGVudDogaW5pdGlhbDtcclxufVxyXG5cclxuOndoZXJlKFtoaWRkZW5dKSB7XHJcblx0ZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuOndoZXJlKFtjb250ZW50ZWRpdGFibGVdOm5vdChbY29udGVudGVkaXRhYmxlPSdmYWxzZSddKSkge1xyXG5cdC1tb3otdXNlci1tb2RpZnk6IHJlYWQtd3JpdGU7XHJcblx0LXdlYmtpdC11c2VyLW1vZGlmeTogcmVhZC13cml0ZTtcclxuXHRvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG5cdC13ZWJraXQtbGluZS1icmVhazogYWZ0ZXItd2hpdGUtc3BhY2U7XHJcblx0LXdlYmtpdC11c2VyLXNlbGVjdDogYXV0bztcclxufVxyXG5cclxuOndoZXJlKFtkcmFnZ2FibGU9J3RydWUnXSkge1xyXG5cdC13ZWJraXQtdXNlci1kcmFnOiBlbGVtZW50O1xyXG59XHJcblxyXG46d2hlcmUoZGlhbG9nOm1vZGFsKSB7XHJcblx0YWxsOiByZXZlcnQ7XHJcbn1cclxuIiwiKjp3aGVyZSg6bm90KGh0bWwsIGlmcmFtZSwgY2FudmFzLCBpbWcsIHN2ZywgdmlkZW8sIGF1ZGlvKTpub3Qoc3ZnICosIHN5bWJvbCAqKSkge1xuICBhbGw6IHVuc2V0O1xuICBkaXNwbGF5OiByZXZlcnQ7XG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYSxcbmJ1dHRvbiB7XG4gIGN1cnNvcjogcmV2ZXJ0O1xufVxuXG5vbCxcbnVsLFxubWVudSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmltZyB7XG4gIG1heC1pbmxpbmUtc2l6ZTogMTAwJTtcbiAgbWF4LWJsb2NrLXNpemU6IDEwMCU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IGF1dG87XG59XG5cbnRleHRhcmVhIHtcbiAgd2hpdGUtc3BhY2U6IHJldmVydDtcbn1cblxubWV0ZXIge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHJldmVydDtcbiAgLW1vei1hcHBlYXJhbmNlOiByZXZlcnQ7XG4gIGFwcGVhcmFuY2U6IHJldmVydDtcbn1cblxuOndoZXJlKHByZSkge1xuICBhbGw6IHJldmVydDtcbn1cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHVuc2V0O1xufVxuXG46Oi1tb3otcGxhY2Vob2xkZXIge1xuICBjb2xvcjogdW5zZXQ7XG59XG5cbjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogdW5zZXQ7XG59XG5cbjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHVuc2V0O1xufVxuXG46OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHVuc2V0O1xufVxuXG46Om1hcmtlciB7XG4gIGNvbnRlbnQ6IGluaXRpYWw7XG59XG5cbjp3aGVyZShbaGlkZGVuXSkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG46d2hlcmUoW2NvbnRlbnRlZGl0YWJsZV06bm90KFtjb250ZW50ZWRpdGFibGU9ZmFsc2VdKSkge1xuICAtbW96LXVzZXItbW9kaWZ5OiByZWFkLXdyaXRlO1xuICAtd2Via2l0LXVzZXItbW9kaWZ5OiByZWFkLXdyaXRlO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICAtd2Via2l0LWxpbmUtYnJlYWs6IGFmdGVyLXdoaXRlLXNwYWNlO1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBhdXRvO1xufVxuXG46d2hlcmUoW2RyYWdnYWJsZT10cnVlXSkge1xuICAtd2Via2l0LXVzZXItZHJhZzogZWxlbWVudDtcbn1cblxuOndoZXJlKGRpYWxvZzptb2RhbCkge1xuICBhbGw6IHJldmVydDtcbn1cblxuLmNsaWVudHNfX3RpdGxlLFxuLmFib3V0X190aXRsZSxcbi5oZWFkZXJfX2xpbmsge1xuICBmb250LWZhbWlseTogXCJXb3JrIFNhbnNcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogMTUwJTtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICMwMTAyMDggMTYuMzklLCAjMDEwMjA2IDIwLjUxJSwgIzA0MDAwOCAyNC43OSUsICMwMTAxMDEgMzAuNDYlLCAjMDEwMTAxIDM0LjExJSwgIzAxMDEwMSAzNi4yMSUsICMwMTAxMDEgMTAwJSk7XG59XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDE0NDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5oZWFkZXItY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAyMHZoO1xuICBwYWRkaW5nOiAwIDYlO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2xvZ28ge1xuICBoZWlnaHQ6IDEwdnc7XG4gIGp1c3RpZnktc2VsZjogc2VsZi1zdGFydDtcbn1cblxuLmhlYWRlci1saXN0IHtcbiAganVzdGlmeS1zZWxmOiBzZWxmLWVuZDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDJ2dztcbn1cblxuLmhlYWRlcl9fbGluayB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogMC4zcyBlYXNlLWluO1xuICAtby10cmFuc2l0aW9uOiAwLjNzIGVhc2UtaW47XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZS1pbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBjb2xvcjogcmdiYSgyMjcsIDIyOCwgMjMwLCAwLjU1KTtcbn1cblxuLmhlYWRlcl9fbGlua19hY3RpdmU6OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI2UzZTRlNjtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiA5cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMTBweDtcbiAgbGVmdDogNDAlO1xufVxuXG4uaGVhZGVyX19saW5rX2FjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudCgzNTAuOTVkZWcsICNiYzNjZDggMC4wNyUsICNjNTRiOGMgMTA2LjMyJSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5OS4wNWRlZywgI2JjM2NkOCAwLjA3JSwgI2M1NGI4YyAxMDYuMzIlKTtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLmFib3V0LWNvbnRhaW5lciB7XG4gIGhlaWdodDogODB2aDtcbiAgcGFkZGluZzogMXZ3O1xuICBwYWRkaW5nLWJvdHRvbTogMTB2aDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgcGxhY2UtaXRlbXM6IGVuZCBjZW50ZXI7XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc2l6ZTogMzNweDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAyZW07XG4gIGNvbG9yOiByZ2JhKDIyNywgMjI4LCAyMzAsIDAuNTUpO1xufVxuXG4uYWJvdXRfX3RpdGxlX2hpZ2hsaWdodCB7XG4gIGNvbG9yOiAjZTNlNGU2O1xufVxuXG4uYWJvdXRfX2J0biB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLW1zLWZsZXgtaXRlbS1hbGlnbjogc2VsZi1lbmQ7XG4gIGFsaWduLXNlbGY6IHNlbGYtZW5kO1xufVxuXG4uY2xpZW50cy1jb250YWluZXIge1xuICBwYWRkaW5nOiAyJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgcGxhY2UtaXRlbXM6IGNlbnRlciBjZW50ZXI7XG59XG5cbi5jbGllbnRzX190aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiA2MCU7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGNvbG9yOiByZ2JhKDIyNywgMjI4LCAyMzAsIDAuNTUpO1xufVxuXG4uY2xpZW50c19fdGl0bGVfaGlnaGxpZ2h0IHtcbiAgY29sb3I6ICNlM2U0ZTY7XG59XG5cbi5jbGllbnRzLWxpc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogNXZoO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDM1dnc7XG4gIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZ2FwOiA1dmg7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVhZGVyX19sb2dvIHtcbiAgICBoZWlnaHQ6IDR2aDtcbiAgfVxuXG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNDRweDtcbiAgfVxuXG4gIC5jbGllbnRzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICB9XG5cbiAgLmNsaWVudHMtbGlzdCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMzB2dyk7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXItY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDEwdmg7XG4gIH1cblxuICAuYWJvdXQtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IGNhbGMoNzAwcHggLSAxMHZoKTtcbiAgfVxuXG4gIC5hYm91dF9fdGl0bGUge1xuICAgIG1heC13aWR0aDogOTgwcHg7XG4gICAgZm9udC1zaXplOiA1NnB4O1xuICB9XG5cbiAgLmNsaWVudHNfX3RpdGxlIHtcbiAgICBtYXgtd2lkdGg6IDY2MHB4O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xuICAuY2xpZW50cy1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDV2dztcbiAgICBwbGFjZS1pdGVtczogYmFzZWxpbmU7XG4gIH1cblxuICAuY2xpZW50c19fdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgZm9udC1zaXplOiA0MHB4O1xuICB9XG5cbiAgLmNsaWVudHMtbGlzdCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMjAlKTtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgLmNsaWVudHNfX2l0ZW0ge1xuICAgIGp1c3RpZnktc2VsZjogYmFzZWxpbmU7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVhZGVyLWNvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiA2dmg7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvIHtcbiAgICBoZWlnaHQ6IDQ4cHg7XG4gIH1cblxuICAuYWJvdXQtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IGNhbGMoNzAwcHggLSA2dmgpO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKGhvdmVyOiBob3Zlcikge1xuICAuaGVhZGVyX19saW5rOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQoMzUwLjk1ZGVnLCAjYmMzY2Q4IDAuMDclLCAjYzU0YjhjIDEwNi4zMiUpO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5OS4wNWRlZywgI2JjM2NkOCAwLjA3JSwgI2M1NGI4YyAxMDYuMzIlKTtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59IiwiJXRleHQge1xyXG5cdGZvbnQtZmFtaWx5OiAnV29yayBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0bGluZS1oZWlnaHQ6IDE1MCU7XHJcbn1cclxuXHJcbiVidXR0b24ge1xyXG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG5cdGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjI3LCAyMjgsIDIzMCwgMC41NSk7XHJcblx0Ym9yZGVyLXJhZGl1czogMTAwcHg7XHJcblxyXG5cdCY6aG92ZXIge1xyXG5cdFx0Y29sb3I6ICRjb2xvclRleHRIaWdobGlnaHQ7XHJcblxyXG5cdFx0YmFja2dyb3VuZDogJGNvbG9yQWN0aXZlO1xyXG5cdFx0Ym9yZGVyOiAxcHggc29saWQgI2UzZTRlNjtcclxuXHRcdGJvcmRlci1yYWRpdXM6IDEwMHB4O1xyXG5cdH1cclxufVxyXG4iLCIqOndoZXJlKDpub3QoaHRtbCwgaWZyYW1lLCBjYW52YXMsIGltZywgc3ZnLCB2aWRlbywgYXVkaW8pOm5vdChzdmcgKiwgc3ltYm9sICopKSB7XG4gIGFsbDogdW5zZXQ7XG4gIGRpc3BsYXk6IHJldmVydDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYSxcbmJ1dHRvbiB7XG4gIGN1cnNvcjogcmV2ZXJ0O1xufVxuXG5vbCxcbnVsLFxubWVudSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmltZyB7XG4gIG1heC1pbmxpbmUtc2l6ZTogMTAwJTtcbiAgbWF4LWJsb2NrLXNpemU6IDEwMCU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IGF1dG87XG59XG5cbnRleHRhcmVhIHtcbiAgd2hpdGUtc3BhY2U6IHJldmVydDtcbn1cblxubWV0ZXIge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHJldmVydDtcbiAgYXBwZWFyYW5jZTogcmV2ZXJ0O1xufVxuXG46d2hlcmUocHJlKSB7XG4gIGFsbDogcmV2ZXJ0O1xufVxuXG46OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IHVuc2V0O1xufVxuXG46Om1hcmtlciB7XG4gIGNvbnRlbnQ6IGluaXRpYWw7XG59XG5cbjp3aGVyZShbaGlkZGVuXSkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG46d2hlcmUoW2NvbnRlbnRlZGl0YWJsZV06bm90KFtjb250ZW50ZWRpdGFibGU9ZmFsc2VdKSkge1xuICAtbW96LXVzZXItbW9kaWZ5OiByZWFkLXdyaXRlO1xuICAtd2Via2l0LXVzZXItbW9kaWZ5OiByZWFkLXdyaXRlO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICAtd2Via2l0LWxpbmUtYnJlYWs6IGFmdGVyLXdoaXRlLXNwYWNlO1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBhdXRvO1xufVxuXG46d2hlcmUoW2RyYWdnYWJsZT10cnVlXSkge1xuICAtd2Via2l0LXVzZXItZHJhZzogZWxlbWVudDtcbn1cblxuOndoZXJlKGRpYWxvZzptb2RhbCkge1xuICBhbGw6IHJldmVydDtcbn1cblxuLmNsaWVudHNfX3RpdGxlLCAuYWJvdXRfX3RpdGxlLCAuaGVhZGVyX19saW5rIHtcbiAgZm9udC1mYW1pbHk6IFwiV29yayBTYW5zXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDE1MCU7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjMDEwMjA4IDE2LjM5JSwgIzAxMDIwNiAyMC41MSUsICMwNDAwMDggMjQuNzklLCAjMDEwMTAxIDMwLjQ2JSwgIzAxMDEwMSAzNC4xMSUsICMwMTAxMDEgMzYuMjElLCAjMDEwMTAxIDEwMCUpO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxNDQwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaGVhZGVyLWNvbnRhaW5lciB7XG4gIGhlaWdodDogMjB2aDtcbiAgcGFkZGluZzogMCA2JTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICBwbGFjZS1pdGVtczogY2VudGVyO1xufVxuLmhlYWRlcl9fbG9nbyB7XG4gIGhlaWdodDogMTB2dztcbiAganVzdGlmeS1zZWxmOiBzZWxmLXN0YXJ0O1xufVxuLmhlYWRlci1saXN0IHtcbiAganVzdGlmeS1zZWxmOiBzZWxmLWVuZDtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAydnc7XG59XG4uaGVhZGVyX19saW5rIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlLWluO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGNvbG9yOiByZ2JhKDIyNywgMjI4LCAyMzAsIDAuNTUpO1xufVxuLmhlYWRlcl9fbGlua19hY3RpdmU6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiA5cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlM2U0ZTY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMTBweDtcbiAgbGVmdDogNDAlO1xufVxuLmhlYWRlcl9fbGlua19hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTkuMDVkZWcsICNiYzNjZDggMC4wNyUsICNjNTRiOGMgMTA2LjMyJSk7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIGhlaWdodDogNHZoO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyLWNvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiAxMHZoO1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlYWRlci1jb250YWluZXIge1xuICAgIGhlaWdodDogNnZoO1xuICB9XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIGhlaWdodDogNDhweDtcbiAgfVxufVxuQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgLmhlYWRlcl9fbGluazpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDk5LjA1ZGVnLCAjYmMzY2Q4IDAuMDclLCAjYzU0YjhjIDEwNi4zMiUpO1xuICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxufVxuLmFib3V0LWNvbnRhaW5lciB7XG4gIGhlaWdodDogODB2aDtcbiAgcGFkZGluZzogMXZ3O1xuICBwYWRkaW5nLWJvdHRvbTogMTB2aDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgcGxhY2UtaXRlbXM6IGVuZCBjZW50ZXI7XG59XG4uYWJvdXRfX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDMzcHg7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMmVtO1xuICBjb2xvcjogcmdiYSgyMjcsIDIyOCwgMjMwLCAwLjU1KTtcbn1cbi5hYm91dF9fdGl0bGVfaGlnaGxpZ2h0IHtcbiAgY29sb3I6ICNlM2U0ZTY7XG59XG4uYWJvdXRfX2J0biB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYWxpZ24tc2VsZjogc2VsZi1lbmQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNDRweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmFib3V0LWNvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiBjYWxjKDcwMHB4IC0gMTB2aCk7XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgbWF4LXdpZHRoOiA5ODBweDtcbiAgICBmb250LXNpemU6IDU2cHg7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuYWJvdXQtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IGNhbGMoNzAwcHggLSA2dmgpO1xuICB9XG59XG4uY2xpZW50cy1jb250YWluZXIge1xuICBwYWRkaW5nOiAyJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgcGxhY2UtaXRlbXM6IGNlbnRlciBjZW50ZXI7XG59XG4uY2xpZW50c19fdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1heC13aWR0aDogNjAlO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBjb2xvcjogcmdiYSgyMjcsIDIyOCwgMjMwLCAwLjU1KTtcbn1cbi5jbGllbnRzX190aXRsZV9oaWdobGlnaHQge1xuICBjb2xvcjogI2UzZTRlNjtcbn1cbi5jbGllbnRzLWxpc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogNXZoO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDM1dnc7XG4gIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBnYXA6IDV2aDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpIHtcbiAgLmNsaWVudHNfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gIH1cbiAgLmNsaWVudHMtbGlzdCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMzB2dyk7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jbGllbnRzX190aXRsZSB7XG4gICAgbWF4LXdpZHRoOiA2NjBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmNsaWVudHMtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA1dnc7XG4gICAgcGxhY2UtaXRlbXM6IGJhc2VsaW5lO1xuICB9XG4gIC5jbGllbnRzX190aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gIH1cbiAgLmNsaWVudHMtbGlzdCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMjAlKTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgLmNsaWVudHNfX2l0ZW0ge1xuICAgIGp1c3RpZnktc2VsZjogYmFzZWxpbmU7XG4gIH1cbn1cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbiBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NzZweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChob3ZlcjogaG92ZXIpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cbiIsIi5oZWFkZXIge1xyXG5cdCYtY29udGFpbmVyIHtcclxuXHRcdGhlaWdodDogMjB2aDtcclxuXHRcdHBhZGRpbmc6IDAgNiU7XHJcblxyXG5cdFx0ZGlzcGxheTogZ3JpZDtcclxuXHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuXHRcdHBsYWNlLWl0ZW1zOiBjZW50ZXI7XHJcblx0fVxyXG5cclxuXHQmX19sb2dvIHtcclxuXHRcdGhlaWdodDogMTB2dztcclxuXHJcblx0XHRqdXN0aWZ5LXNlbGY6IHNlbGYtc3RhcnQ7XHJcblx0fVxyXG5cclxuXHQmLWxpc3Qge1xyXG5cdFx0anVzdGlmeS1zZWxmOiBzZWxmLWVuZDtcclxuXHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0Z2FwOiAydnc7XHJcblx0fVxyXG5cclxuXHQmX19saW5rIHtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHR0cmFuc2l0aW9uOiAwLjNzIGVhc2UtaW47XHJcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG5cdFx0QGluY2x1ZGUgdGV4dCg2MDAsIDE0cHgsIDApO1xyXG5cclxuXHRcdCZfYWN0aXZlOjphZnRlciB7XHJcblx0XHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0XHRoZWlnaHQ6IDFweDtcclxuXHRcdFx0d2lkdGg6IDlweDtcclxuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNvbG9yVGV4dEhpZ2hsaWdodDtcclxuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHRib3R0b206IC0xMHB4O1xyXG5cdFx0XHRsZWZ0OiA0MCU7XHJcblx0XHR9XHJcblx0XHQmX2FjdGl2ZSB7XHJcblx0XHRcdGJhY2tncm91bmQ6ICRjb2xvckFjdGl2ZTtcclxuXHRcdFx0LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XHJcblx0XHRcdGNvbG9yOiB0cmFuc3BhcmVudDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbkBpbXBvcnQgJy4vaGVhZGVyLW1lZGlhLnNjc3MnO1xyXG4iLCJAbWl4aW4gdGV4dCgkZncsICRmcywgJGxzKSB7XHJcblx0Zm9udC13ZWlnaHQ6ICRmdztcclxuXHRmb250LXNpemU6ICRmcztcclxuXHRsZXR0ZXItc3BhY2luZzogJGxzO1xyXG5cdGNvbG9yOiAkY29sb3JUZXh0O1xyXG5cclxuXHRAZXh0ZW5kICV0ZXh0O1xyXG59XHJcblxyXG5AbWl4aW4gYnV0dG9uKCRmdywgJGZzLCAkbHMpIHtcclxuXHRAZXh0ZW5kICV0ZXh0O1xyXG59XHJcbiIsIkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LXNtKSB7XHJcblx0LmhlYWRlciB7XHJcblx0XHQmX19sb2dvIHtcclxuXHRcdFx0aGVpZ2h0OiA0dmg7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1tZCkge1xyXG5cdC5oZWFkZXIge1xyXG5cdFx0Ji1jb250YWluZXIge1xyXG5cdFx0XHRoZWlnaHQ6IDEwdmg7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC14bCkge1xyXG5cdC5oZWFkZXIge1xyXG5cdFx0Ji1jb250YWluZXIge1xyXG5cdFx0XHRoZWlnaHQ6IDZ2aDtcclxuXHRcdH1cclxuXHJcblx0XHQmX19sb2dvIHtcclxuXHRcdFx0aGVpZ2h0OiA0OHB4O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcclxuXHQuaGVhZGVyIHtcclxuXHRcdCZfX2xpbms6aG92ZXIge1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiAkY29sb3JBY3RpdmU7XHJcblx0XHRcdC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xyXG5cdFx0XHRjb2xvcjogdHJhbnNwYXJlbnQ7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiIsIi5hYm91dCB7XHJcblx0Ji1jb250YWluZXIge1xyXG5cdFx0aGVpZ2h0OiA4MHZoO1xyXG5cdFx0cGFkZGluZzogMXZ3O1xyXG5cdFx0cGFkZGluZy1ib3R0b206IDEwdmg7XHJcblxyXG5cdFx0ZGlzcGxheTogZ3JpZDtcclxuXHRcdHBsYWNlLWl0ZW1zOiBlbmQgY2VudGVyO1xyXG5cdH1cclxuXHJcblx0Jl9fdGl0bGUge1xyXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdFx0QGluY2x1ZGUgdGV4dCgzMDAsIDMzcHgsIC0wLjAyZW0pO1xyXG5cclxuXHRcdCZfaGlnaGxpZ2h0IHtcclxuXHRcdFx0Y29sb3I6ICRjb2xvclRleHRIaWdobGlnaHQ7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmX19idG4ge1xyXG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0YWxpZ24tc2VsZjogc2VsZi1lbmQ7XHJcblx0fVxyXG59XHJcblxyXG5AaW1wb3J0ICcuL2Fib3V0LW1lZGlhLnNjc3MnO1xyXG4iLCJAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1zbSkge1xyXG5cdC5hYm91dCB7XHJcblx0XHQmX190aXRsZSB7XHJcblx0XHRcdGZvbnQtc2l6ZTogNDRweDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LW1kKSB7XHJcblx0LmFib3V0IHtcclxuXHRcdCYtY29udGFpbmVyIHtcclxuXHRcdFx0aGVpZ2h0OiBjYWxjKDcwMHB4IC0gMTB2aCk7XHJcblx0XHR9XHJcblx0XHQmX190aXRsZSB7XHJcblx0XHRcdG1heC13aWR0aDogOTgwcHg7XHJcblx0XHRcdGZvbnQtc2l6ZTogNTZweDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LXhsKSB7XHJcblx0LmFib3V0IHtcclxuXHRcdCYtY29udGFpbmVyIHtcclxuXHRcdFx0aGVpZ2h0OiBjYWxjKDcwMHB4IC0gNnZoKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuIiwiLmNsaWVudHMge1xyXG5cdCYtY29udGFpbmVyIHtcclxuXHRcdHBhZGRpbmc6IDIlO1xyXG5cclxuXHRcdGRpc3BsYXk6IGdyaWQ7XHJcblx0XHRwbGFjZS1pdGVtczogY2VudGVyIGNlbnRlcjtcclxuXHR9XHJcblxyXG5cdCZfX3RpdGxlIHtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdG1heC13aWR0aDogNjAlO1xyXG5cclxuXHRcdEBpbmNsdWRlIHRleHQoMzAwLCAyMHB4LCAwKTtcclxuXHJcblx0XHQmX2hpZ2hsaWdodCB7XHJcblx0XHRcdGNvbG9yOiAkY29sb3JUZXh0SGlnaGxpZ2h0O1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ji1saXN0IHtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0bWFyZ2luLXRvcDogNXZoO1xyXG5cclxuXHRcdGRpc3BsYXk6IGdyaWQ7XHJcblx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDM1dnc7XHJcblx0XHRwbGFjZS1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRnYXA6IDV2aDtcclxuXHR9XHJcbn1cclxuXHJcbkBpbXBvcnQgJy4vY2xpZW50cy1tZWRpYS5zY3NzJztcclxuIiwiQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtc20pIHtcclxuXHQuY2xpZW50cyB7XHJcblx0XHQmX190aXRsZSB7XHJcblx0XHRcdGZvbnQtc2l6ZTogMzBweDtcclxuXHRcdH1cclxuXHJcblx0XHQmLWxpc3Qge1xyXG5cdFx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAzMHZ3KTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LW1kKSB7XHJcblx0LmNsaWVudHMge1xyXG5cdFx0Jl9fdGl0bGUge1xyXG5cdFx0XHRtYXgtd2lkdGg6IDY2MHB4O1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtbGcpIHtcclxuXHQuY2xpZW50cyB7XHJcblx0XHQmLWNvbnRhaW5lciB7XHJcblx0XHRcdHBhZGRpbmc6IDV2dztcclxuXHRcdFx0cGxhY2UtaXRlbXM6IGJhc2VsaW5lO1xyXG5cdFx0fVxyXG5cclxuXHRcdCZfX3RpdGxlIHtcclxuXHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcclxuXHRcdFx0Zm9udC1zaXplOiA0MHB4O1xyXG5cdFx0fVxyXG5cclxuXHRcdCYtbGlzdCB7XHJcblx0XHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDIwJSk7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdH1cclxuXHJcblx0XHQmX19pdGVtIHtcclxuXHRcdFx0anVzdGlmeS1zZWxmOiBiYXNlbGluZTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuIl19 */